REGISTER
POST /auth/register
BODY firstName, lastName, emailorMobile, password, confirmPassword
RESPONSE
201 { accessToken: String, user: {id : Number, firstName: String} }
400 { message: String, emailOrMobileExist: true}
500 { message: String }

LOGIN
POST /auth/login
BODY emailOrMobile, password
RESPONSE
200 { accessToken: String, user: { id: Number, firstName: String} }
400 { message: String }
500 { message: String }

GET AUTHENTICATED user
GET /auth/me
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { user: { id: Number, firstName: String } }
401 { message: String }
500 { message: String }

UPDATE PROFILE/COVER IMAGE
PATCH /user
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
BODY profileImage?, coverImage?
RESPONSE
200 { profileImage?: String, coverImage?: String }
400 { message: String }
401 { message: String }
500 { message: String }

GET USER PROFILE BY id
GET /user/:userId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { 
    user: { id: Number, firstName: String ,... }, 
    status: String, 
    friends: [{ id: Number, firstName: String ,... }
    ]
}
401 { message: String }
500 { message: String }

REQUEST FRIEND
POST /friend/:receiverId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message: String }
400 { message: String }
401 { message: String }
500 { message: String }

DELETE FRIEND
DELETE /friend/:targetUserId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message: String }
400 { message: String }
401 { message: String }
500 { message: String }

REJECT REQUEST
DELETE /friend/:requesterId/reject
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message: String }
400 { message: String }
401 { message: String }
500 { message: String }

CANCEL REQUEST
DELETE /friend/:receiverId/cancel
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message: String }
400 { message: String }
401 { message: String }
500 { message: String }

UNFRIEND REQUEST
DELETE /friend/:friendId/unfriend
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message: String }
400 { message: String }
401 { message: String }
500 { message: String }

ACCEPT FRIEND
PATCH /friend/:requesterId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message: String }
400 { message: String }
401 { message: String }
500 { message: String }

CREATE POST
POST /post
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
BODY message?, image?
RESPONSE
201 { message: status }
400 { message: status }
401 { message: status }
500 { message: status }

GET ALL POST INCULUDE POST FRIEND
GET /post/friend
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { post:[{id:Number, message:String, image:String, user:{id:Number, firtsName:String, lastName}}]}
400 {message:string}
401 {message:string}
500 {message:string}

TOGGLE LIKE
POST /post/:postId/like
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message: status }
400 { message: status }
401 { message: status }
500 { message: status }

DELETE POST
DELETE /post/:postId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message: status }
400 { message: status }
401 { message: status }
500 { message: status }
